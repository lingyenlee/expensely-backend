{"version":3,"sources":["../../src/controllers/budgetsController.js"],"names":["createBudget","req","res","body","name","amount","timePeriod","category","User","findById","user","id","budget","budgets","find","toLowerCase","status","json","msg","newbudget","push","save","length","console","log","send","getBudgets","getBudget","params","budgetId","updateBudget","set","deleteBudget","remove","validationRules","method","exists","not","isEmpty","isIn","optional"],"mappings":"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","file":"budgetsController.js","sourcesContent":["import User from '../models/userModel';\nimport { body, validationResult, param } from 'express-validator';\n\nexport const createBudget = async (req, res) => {\n  try {\n    const { name, amount, timePeriod, category } = req.body;\n\n    const user = await User.findById(req.user.id);\n\n    const budget = user.budgets.find(\n      (budget) => budget.name.toLowerCase() === name.toLowerCase()\n    );\n    if (budget) {\n      return res.status(409).json({ msg: 'budget already exists' });\n    }\n\n    const newbudget = {\n      name,\n      amount,\n      timePeriod,\n      category,\n    };\n\n    await user.budgets.push(newbudget);\n    await user.save();\n    return res.status(201).json(user.budgets[user.budgets.length - 1]);\n  } catch (error) {\n    console.log(error);\n    res.status(500).send({ msg: 'Internal server error' });\n  }\n};\n\nexport const getBudgets = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.id);\n    return res.status(200).json(user.budgets);\n  } catch (error) {\n    console.log(error);\n    res.status(500).send({ msg: 'Internal server error' });\n  }\n};\n\nexport const getBudget = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.id);\n    const budget = await user.budgets.id(req.params.budgetId);\n\n    if (!budget) return res.status(404).json({ msg: 'Budget not found' });\n    return res.status(200).json(budget);\n  } catch (error) {\n    console.log(error);\n    res.status(500).send({ msg: 'Internal server error' });\n  }\n};\n\nexport const updateBudget = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.id);\n    const budget = user.budgets.id(req.params.budgetId);\n\n    if (!budget) {\n      return res.status(404).json({ msg: 'budget not found' });\n    }\n\n    await budget.set(req.body);\n    await user.save();\n\n    return res.status(200).json(budget);\n  } catch (error) {\n    console.log(error);\n    res.status(500).send({ msg: 'Internal server error' });\n  }\n};\n\nexport const deleteBudget = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.id);\n    const budget = user.budgets.id(req.params.budgetId);\n\n    if (!budget) {\n      return res.status(404).json({ msg: 'budget not found' });\n    }\n\n    await budget.remove();\n    await user.save();\n    return res.status(200).json(budget);\n  } catch (error) {\n    console.log(error);\n    res.status(500).send({ msg: 'Internal server error' });\n  }\n};\n\nexport const validationRules = (method) => {\n  switch (method) {\n    case 'createBudget':\n      return [\n        body('name').exists().not().isEmpty(),\n        body('amount').exists().not().isEmpty(),\n        body('timePeriod').exists().not().isEmpty().isIn(['monthly', 'weekly']),\n        body('category').exists().not().isEmpty(),\n      ];\n    case 'updateBudget':\n      return [\n        param('budgetId').exists(),\n        body('timePeriod').optional().isIn(['monthly', 'weekly']),\n      ];\n    case 'deletebudget':\n      return [param('budgetId').exists()];\n  }\n};\n"]}