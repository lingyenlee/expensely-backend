{"version":3,"sources":["../../src/middleware/auth.js"],"names":["dotenv","config","secret","process","env","SECRET","module","exports","req","res","next","token","header","console","log","status","json","msg","decoded","jwt","verify","user","error"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP;AACA,IAAMC,SAASC,QAAQC,GAAR,CAAYC,MAA3B;;AAEAC,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;;AAEzC;AACA,MAAMC,QAAQH,IAAII,MAAJ,CAAW,cAAX,CAAd;AACAC,UAAQC,GAAR,CAAYH,KAAZ;AACA;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WAAOF,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,KAAK,0BAAP,EAArB,CAAP;AACD;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI;AACF,QAAMC,UAAUC,uBAAIC,MAAJ,CAAWT,KAAX,EAAkBT,MAAlB,CAAhB;;AAEA;AACAM,QAAIa,IAAJ,GAAWH,QAAQG,IAAnB;;AAEAX;AACD,GAPD,CAOE,OAAOY,KAAP,EAAc;AACdb,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,KAAK,oBAAP,EAArB;AACD;AACF,CAhCD","file":"auth.js","sourcesContent":["import dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\n\ndotenv.config();\nconst secret = process.env.SECRET;\n\nmodule.exports = function (req, res, next) {\n\n  //change token header for backend testing with postman\n  const token = req.header('x-auth-token');\n  console.log(token)\n  // Check if not token\n  if (!token) {\n    return res.status(401).json({ msg: 'No token, Not authorized' });\n  }\n\n  //token header for frontend\n  // let token;\n  // if (req.headers.authorization) {\n\n  //   //   //get token from headers\n  //   token = req.headers.authorization;\n  //   console.log(token)\n  // } else {\n  //   //return error if no token\n  //   return res.status(401).json({ msg: 'No token, Not authorized' });\n  // }\n\n  try {\n    const decoded = jwt.verify(token, secret);\n\n    //save the decoded user to req.body\n    req.user = decoded.user;\n\n    next();\n  } catch (error) {\n    res.status(401).json({ msg: 'token is not valid' });\n  }\n};\n"]}