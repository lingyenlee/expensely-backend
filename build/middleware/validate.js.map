{"version":3,"sources":["../../src/middleware/validate.js"],"names":["validate","req","res","next","errors","isEmpty","extractedErrors","array","map","err","push","param","msg","status","json"],"mappings":";;;;;;;AAAA;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAMC,SAAS,wCAAiBH,GAAjB,CAAf;AACA,MAAIG,OAAOC,OAAP,EAAJ,EAAsB;AACpB,WAAOF,MAAP;AACD;AACD,MAAMG,kBAAkB,EAAxB;AACAF,SAAOG,KAAP,GAAeC,GAAf,CAAmB,UAACC,GAAD;AAAA,WAASH,gBAAgBI,IAAhB,qBAAwBD,IAAIE,KAA5B,EAAoCF,IAAIG,GAAxC,EAAT;AAAA,GAAnB;;AAEA,SAAOV,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BV,YAAQE;AADkB,GAArB,CAAP;AAGD,CAXM","file":"validate.js","sourcesContent":["import { validationResult } from 'express-validator';\n\nexport const validate = (req, res, next) => {\n  const errors = validationResult(req);\n  if (errors.isEmpty()) {\n    return next();\n  }\n  const extractedErrors = [];\n  errors.array().map((err) => extractedErrors.push({ [err.param]: err.msg }));\n\n  return res.status(422).json({\n    errors: extractedErrors,\n  });\n};\n"]}